/**
* This class represents the Stack Overflow website
*/
class StackOverflow

	types
		
		/** String */
		public String = seq of char;


	instance variables
		
		/** List of existing users */
		public users: set of User := {};
		
		/** List of existing questions */
		public questions: map seq1 of char to Question := {|->};
		
		-- o.O?
		private static stackoverflow: StackOverflow := new StackOverflow();
		
		/** The user that's currently logged in */
		public loggedUser: [User] := nil;
	
	
	operations
		
		/**
		* Default Constructor
		*
		* @post StackOverflow was created
		*/
		public StackOverflow: () ==> StackOverflow
		StackOverflow() == (
			return self;
		)
		post users = {};
		
		
		/**
		* Creates a new user
		*
		* @param username Username
		* @param password Password
		*
		* @pre  Username is unique
		* @post User was added to users' set
		*/
		public signup: String * String ==> ()
		signup(username, password) == (
			
			-- create user
			dcl user: User := new User(username, password);
			
			-- add user
			users := users union {user};
		)
		pre  (
			forall user in set users & user.username <> username
		)
		post (
			card users = card users~ + 1 and
			exists user in set users & (
				user.username = username and
				user.password = password and
				user.id = User`nextid - 1
		));
		
		
		/**
		* Logs in the user with the given username-password
		*
		* @param username Username
		* @param password Password
		*
		* @pre  There isn't an user already logged in
		* @pre  Username and password are a match
		* @post User logged in
		*/
		public login: String * String ==> ()
		login(username, password) == (
			
			for all user in set users do (
				
				if (user.username = username and user.password = password) then (
					
					loggedUser := user;
				)
			);
		)
		pre  (
			loggedUser = nil and exists1 user in set users & (
			user.username = username and
			user.password = password
		))
		post (
			loggedUser.username = username and
			loggedUser.password = password
		);
		
		
		/**
		* Resets this instance
		*
		* @post There are no users and no questions
		*/
		public clear: () ==> ()
		clear() == (
			users := {};
			questions := {|->}
		)
		post (users = {} and questions = {|->});
		
		
		-- Returns the existent instance
		public pure static getInstance: () ==> StackOverflow
		getInstance() == (
			return stackoverflow;
		);
		
		
		-- Resets the instance
		public static clearInstance: () ==> StackOverflow
		clearInstance() == (
			stackoverflow := new StackOverflow();
			return getInstance();
		)
		post RESULT.users = {};

		
		-- Add question
		public addQuestion: seq1 of char * User * String * String ==> ()
		addQuestion(name, user,title,text) == questions := questions munion {name |-> new Question(user,title,text)}
		pre
				-- each group name is unique
				name not in set dom questions and
				user in set users;

end StackOverflow